{"version":3,"sources":["assets/img/businessman.png","assets/img/remove.png","cmps/companie-preview.jsx","cmps/companie-list.jsx","cmps/layout/MainLayout.jsx","services/storage.service.js","services/util.service.js","services/dataService.js","cmps/companie-preview-results.jsx","cmps/companies-list-results.jsx","cmps/search-result.jsx","cmps/search-companie.jsx","services/db-service.js","pages/home-page.jsx","routes.js","root-cmp.jsx","index.js"],"names":["CompaniePreview","console","log","this","props","companie","name","symbol","country","employees","idx","src","logo","className","businessman","onClick","onRemoveCompanie","_id","remove","Component","CompanieList","companies","map","MainLayout","children","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","stringify","removeFromStorage","removeItem","utilService","makeId","length","txt","possible","i","charAt","Math","floor","random","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","storeToStorage","value","setItem","data","undefined","companieCache","dataService","getCompanieData","getCompanieDateSearch","keySerch","a","storageService","axios","get","res","results","CompaniePreviewResult","addNewCompanie","slice","CompaniesList","SearchResult","state","companiesData","setState","prevProps","_","require","SearchCompanie","keySearch","isOnSearch","delayedHandleChange","debounce","toUpperCase","result","handleChange","target","type","placeholder","onChange","DbService","query","post","put","insert","collectionName","collection","Promise","resolve","id","find","curr","findIndex","Error","splice","item","push","items","forEach","routes","path","component","ticker","newCompanie","loadCompaniesData","companieId","filter","dataCompaniesResults","label","RootCmp","basename","route","exact","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e635952c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/businessman.0c4b33ee.png\";","export default __webpack_public_path__ + \"static/media/remove.75637132.png\";","import React, { Component } from 'react'\r\nimport businessman from '../assets/img/businessman.png'\r\nimport remove from '../assets/img/remove.png'\r\n\r\nexport class CompaniePreview extends Component {\r\n    componentDidMount() {\r\n        console.log(this.props.companie.name);\r\n        console.log(this.props.companie.symbol);\r\n        console.log(this.props.companie.country);\r\n        console.log(this.props.companie.employees);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { companie, idx } = this.props\r\n        if (!companie) return <div></div>\r\n        return (\r\n            <>\r\n                <td><img src={companie.logo ? companie.logo : \"no logo found\"} /></td>\r\n                <td>{companie.name}</td>\r\n                <td>{companie.symbol}\r\n                </td>\r\n              \r\n                <td>\r\n                    <span className='employees'>\r\n                        <span>\r\n                        {companie.employees ? companie.employees : '-'}\r\n                        </span>\r\n                        <img src={businessman} />\r\n                    </span>\r\n                </td>\r\n                <td>{companie.country}</td>\r\n                <td onClick={() => { this.props.onRemoveCompanie(companie._id) }}>\r\n\r\n                    <img className='remove-img' src={remove}/>\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { CompaniePreview } from './companie-preview'\r\n\r\n\r\nexport function CompanieList({ companies,onRemoveCompanie }) {\r\n    return (<>\r\n        {companies.map((companie, idx) => {\r\n                return<tr key={companie._id}><CompaniePreview  onRemoveCompanie={onRemoveCompanie} key={companie._id} companie={companie} idx={idx} />\r\n            </tr>\r\n        }\r\n        )}\r\n    </>\r\n    )\r\n}\r\n\r\n","export const MainLayout = ({ children }) => {\r\n     return <div className=\"main-container\">\r\n         {children}\r\n     </div>\r\n\r\n}","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val)? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\nfunction removeFromStorage(key) {\r\n    localStorage.removeItem(key) \r\n}\r\n\r\n\r\nexport default {\r\n    loadFromStorage,\r\n    saveToStorage,\r\n    removeFromStorage\r\n\r\n}","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    storeToStorage,\r\n    loadFromStorage\r\n}\r\n\r\n\r\nfunction storeToStorage(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value) || null);\r\n}\r\nfunction loadFromStorage(key) {\r\n    let data = localStorage.getItem(key);\r\n    return (data) ? JSON.parse(data) : undefined;\r\n}\r\n\r\nfunction makeId(length = 6) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n\r\n\r\nexport function Duration({ className, seconds }) {\r\n    return (\r\n        <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n            {format(seconds)}\r\n        </time>\r\n    )\r\n}\r\n\r\nfunction format(seconds) {\r\n    const date = new Date(seconds * 1000)\r\n    const hh = date.getUTCHours()\r\n    const mm = date.getUTCMinutes()\r\n    const ss = pad(date.getUTCSeconds())\r\n    if (hh) {\r\n        return `${hh}:${pad(mm)}:${ss}`\r\n    }\r\n    return `${mm}:${ss}`\r\n}\r\n\r\nfunction pad(string) {\r\n    return ('0' + string).slice(-2)\r\n}\r\n\r\n\r\n","import storageService from './storage.service'\r\nimport { utilService } from './util.service';\r\nimport axios from 'axios'\r\nconst KEY = 'data';\r\nlet companieCache = []\r\nexport const dataService = {\r\n    getCompanieData,\r\n    getCompanieDateSearch\r\n}\r\nasync function getCompanieData(keySerch) {\r\n    debugger\r\n    if (!keySerch) return []\r\n    companieCache = storageService.loadFromStorage([keySerch])\r\n    if (companieCache) {\r\n        if (companieCache.length)\r\n            companieCache = companieCache[0]\r\n        console.log('No need to fetch, retrieving from Cache');\r\n        return (companieCache)\r\n    }\r\n    try {\r\n        const res = await axios.get(`https://api.polygon.io/v1/meta/symbols/${keySerch}/company?apiKey=pv_VVp9rQJ7d8X4aU0wI8Fw2W_GHWVOD`)\r\n        res.data._id = utilService.makeId()\r\n        await storageService.saveToStorage([keySerch], res.data)\r\n        return res.data\r\n    }\r\n    catch (err) {\r\n        console.log('Cannwot reach server:', err);\r\n    }\r\n}\r\nasync function getCompanieDateSearch(keySerch) {\r\n    if (!keySerch) return []\r\n    companieCache = storageService.loadFromStorage([keySerch+ 'SERCH'])\r\n    if (companieCache) {\r\n        console.log('No need to fetch, retrieving from Cache');\r\n        return (companieCache)\r\n    }\r\n    try {\r\n        const res = await axios.get(`https://api.polygon.io/v3/reference/tickers?search=${keySerch}&active=true&sort=ticker&order=asc&limit=5&apiKey=pv_VVp9rQJ7d8X4aU0wI8Fw2W_GHWVOD`)\r\n        await storageService.saveToStorage([keySerch+ 'SERCH'], res.data.results)\r\n        res.data.results.map(companie => {\r\n            companie._id = utilService.makeId()\r\n        })\r\n        return res.data.results\r\n    }\r\n    catch (err) {\r\n        console.log('Cannwot reach server:', err);\r\n    }\r\n}\r\n\r\n//https://api.polygon.io/v1/meta/symbols/${keySerch}/company?&limit=1&apiKey=pv_VVp9rQJ7d8X4aU0wI8Fw2W_GHWVOD\r\n\r\n//https://api.polygon.io/v3/reference/tickers?search=${keySerch}&active=true&sort=ticker&order=asc&limit=1&apiKey=pv_VVp9rQJ7d8X4aU0wI8Fw2W_GHWVOD\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class CompaniePreviewResult extends Component {\r\n\r\n\r\n    render() {\r\n        const { companie, addNewCompanie } = this.props\r\n        return (\r\n            <div className='result-preview'>\r\n                <span>\r\n                    {companie.name.length < 25 ? companie.name : companie.name.slice(0, 50) + '...'}\r\n                </span>\r\n                    <button onClick={() => { addNewCompanie(companie) }}>add</button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { CompaniePreviewResult } from './companie-preview-results'\r\n\r\n\r\nexport function CompaniesList({addNewCompanie, companies }) {\r\n    return (<div className='list-results'>\r\n        {companies.map((companie, idx) => {\r\n            return <CompaniePreviewResult addNewCompanie={addNewCompanie}key={idx} companie={companie} idx={idx} />\r\n        }\r\n        )}\r\n    </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CompaniesList } from './companies-list-results'\r\n\r\nexport class SearchResult extends Component {\r\n    state = {\r\n        companiesData: null,\r\n    }\r\n    componentDidMount() {\r\n        const { companiesData } = this.props\r\n        this.setState({ companiesData })\r\n\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.companiesData !== prevProps.companiesData) {\r\n            const { companiesData } = this.props\r\n            this.setState({ companiesData })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { companiesData } = this.state\r\n        if (!companiesData || !companiesData.length) return <div>No results found</div>\r\n        return (\r\n            <section className='search-result-container'>\r\n                {companiesData.length &&\r\n                    <CompaniesList addNewCompanie={this.props.addNewCompanie} companies={companiesData.slice(0, 5)} />\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { dataService } from '../services/dataService';\r\nimport { SearchResult } from './search-result';\r\nvar _ = require('lodash');\r\nexport class SearchCompanie extends Component {\r\n    state = {\r\n        keySearch: null,\r\n        isOnSearch: false,\r\n        companiesData: null,\r\n\r\n    }\r\n    delayedHandleChange = _.debounce(async () => {\r\n        if (!this.state.keySearch) return\r\n        const result = await dataService.getCompanieDateSearch(this.state.keySearch.toUpperCase())\r\n        if (!result) {\r\n            result = []\r\n        }\r\n        this.setState({ companiesData: result }, () => {\r\n            this.setState({ isOnSearch: true });\r\n        })\r\n    }, 700);\r\n\r\n\r\n    handleChange = async ({ target }) => {\r\n        this.setState({ keySearch: target.value }, () => {\r\n            if (this.state.keySearch === '' || this.state.keySearch === ' ') {\r\n                this.setState({ isOnSearch: false })\r\n                return\r\n            }\r\n            this.delayedHandleChange(this.state.keySearch)\r\n        })\r\n\r\n    }\r\n    render() {\r\n        const {isOnSearch,companiesData}= this.state\r\n        return (\r\n            <section className='search-container'>\r\n                <input type='text'  placeholder='Search companie' onChange={this.handleChange} />\r\n                {\r\n                    isOnSearch &&\r\n                    <SearchResult addNewCompanie={this.props.addNewCompanie} companiesData={companiesData}  />\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","'use strict';\r\n\r\nimport { utilService } from './util.service';\r\n\r\nexport const DbService = {\r\n    query,\r\n    get,\r\n    remove,\r\n    post,\r\n    put,\r\n    insert\r\n};\r\n\r\nconst ID_FIELD = '_id';\r\nfunction query(collectionName) {\r\n    var collection = utilService.loadFromStorage(collectionName);\r\n    if (!collection || !collection.length) {\r\n        collection = [{\r\n            name: \"Apple Inc.\",\r\n            symbol: \"AAPL\",\r\n            country: \"usa\",\r\n            employees: \"123000\",\r\n            logo: \"https://s3.polygon.io/logos/aapl/logo.png\",\r\n            _id: \"101a\"\r\n        },\r\n        {\r\n            name: \"Analog Devices Inc\",\r\n            symbol: \"ADI\",\r\n            country: \"usa\",\r\n            employees: \"15300\",\r\n            logo: \"https://s3.polygon.io/logos/adi/logo.png\",\r\n            _id: \"102a\"\r\n        },\r\n        {\r\n            name: \"Automatic Data Processing Inc.\",\r\n            symbol: \"ADP\",\r\n            country: \"usa\",\r\n            employees: \"57000\",\r\n            logo: \"https://s3.polygon.io/logos/adp/logo.png\",\r\n            _id: \"103a\"\r\n\r\n        },\r\n\r\n        {\r\n            name: \"Amyris Inc.\",\r\n            symbol: \"AMRS\",\r\n            country: \"usa\",\r\n            employees: \"414\",\r\n            logo: \"https://s3.polygon.io/logos/amrs/logo.png\",\r\n            _id: \"104a\"\r\n        }, {\r\n            country: \"usa\",\r\n            logo: \"https://s3.polygon.io/logos/cmct/logo.png\",\r\n            name: \"CIM Commercial Trust Corporation\",\r\n            symbol: \"CMCT\",\r\n            _id: \"QV23p5\",\r\n\r\n        }, {\r\n            country: \"usa\",\r\n            employees: '820',\r\n            logo: \"https://s3.polygon.io/logos/kequ/logo.png\",\r\n            name: \"Kewaunee Scientific Corporation\",\r\n            symbol: \"KEQU\",\r\n            _id: \"Z5AYPI\",\r\n        },\r\n        {\r\n            country: \"usa\",\r\n            employees: '1176',\r\n            logo: \"https://s3.polygon.io/logos/cwt/logo.png\",\r\n                name: \"California Water Service Group\",\r\n            symbol: \"CWT\",\r\n            _id: \"guSDQG\",\r\n        },\r\n        {\r\n            country: \"usa\",\r\n            employees: '37205',\r\n            logo: \"https://s3.polygon.io/logos/casy/logo.png\",\r\n            name: \"Caseys General Stores Inc.\",\r\n            symbol: \"CASY\",\r\n            _id: \"5EVRDV\",\r\n\r\n        },\r\n        {\r\n            country: \"usa\",\r\n            employees: '945',\r\n            logo: \"https://s3.polygon.io/logos/cpk/logo.png\",\r\n            name: \"Chesapeake Utilities Corporation\",\r\n            symbol: \"CPK\",\r\n            _id: \"T8Md9c\",\r\n        }\r\n        ]\r\n        //collection = ['ARBE','P', 'AAPL', 'ADI', 'ADP', 'FB', 'TSLA', 'AEP', 'AMGN', 'TWTR', 'GOOGL',]\r\n        utilService.storeToStorage(collectionName, collection);\r\n    }\r\n    return Promise.resolve(collection);\r\n}\r\n\r\n\r\n\r\nasync function get(collectionName, id) {\r\n    var collection = await query(collectionName);\r\n    return collection.find(curr => curr[ID_FIELD] === id);\r\n}\r\n\r\nasync function remove(collectionName, id) {\r\n    var collection = await query(collectionName);\r\n    var idx = collection.findIndex(curr => curr[ID_FIELD] === id);\r\n    if (idx === -1) throw new Error('something went wrong');\r\n    collection.splice(idx, 1);\r\n\r\n    utilService.storeToStorage(collectionName, collection);\r\n    return Promise.resolve();\r\n}\r\n\r\nasync function post(collectionName, item) {\r\n    var collection = await query(collectionName);\r\n    item[ID_FIELD] = utilService.makeId()\r\n    collection.push(item);\r\n    utilService.storeToStorage(collectionName, collection);\r\n    return Promise.resolve(item);\r\n}\r\n\r\nasync function put(collectionName, item) {\r\n    var collection = await query(collectionName);\r\n    let idx = collection.findIndex(curr => curr[ID_FIELD] === item[ID_FIELD]);\r\n    if (idx === -1) throw new Error('something went wrong');\r\n    collection[idx] = item;\r\n\r\n    utilService.storeToStorage(collectionName, collection);\r\n    return Promise.resolve(item);\r\n}\r\n\r\nasync function insert(collectionName, items) {\r\n    var collection = await query(collectionName);\r\n    items.forEach(curr => curr[ID_FIELD] = utilService.makeId());\r\n    collection.push(...items);\r\n\r\n    utilService.storeToStorage(collectionName, collection);\r\n    return Promise.resolve();\r\n}\r\n","import React, { Component } from 'react'\r\nimport { CompanieList } from '../cmps/companie-list'\r\nimport { MainLayout } from '../cmps/layout/MainLayout'\r\nimport { SearchCompanie } from '../cmps/search-companie'\r\nimport { dataService } from '../services/dataService'\r\nimport { DbService } from '../services/db-service'\r\n\r\nexport class HomePage extends Component {\r\n    state = {\r\n        companiesData: null\r\n    }\r\n    componentDidMount() {\r\n        this.loadCompaniesData()\r\n    }\r\n\r\n    addNewCompanie = async (companie) => {\r\n        let newCompanie = await dataService.getCompanieData(companie.ticker)\r\n        if (!newCompanie) return\r\n        newCompanie = {\r\n            name: newCompanie.name,\r\n            symbol: newCompanie.symbol,\r\n            country: newCompanie.country,\r\n            logo: newCompanie.logo,\r\n            employees: newCompanie.employees,\r\n        }\r\n        await DbService.post('companie', newCompanie)\r\n        this.loadCompaniesData()\r\n    }\r\n    onRemoveCompanie = async (companieId) => {\r\n        await DbService.remove('companie', companieId)\r\n        const companiesData = this.state.companiesData.filter(companie => {\r\n           return companie._id !== companieId\r\n        })\r\n        this.setState({ companiesData })\r\n    }\r\n\r\n    loadCompaniesData = async () => {\r\n        const dataCompaniesResults = await DbService.query('companie')\r\n        this.setState({ companiesData: dataCompaniesResults })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { companiesData } = this.state\r\n        if (!companiesData) return <div>loading....</div>\r\n        return (\r\n            <MainLayout>\r\n                <section className='home'>\r\n                <h1 className='title'>traded companies in Nasdaq</h1>\r\n                <SearchCompanie addNewCompanie={this.addNewCompanie} />\r\n                <table>\r\n                    <thead>\r\n                        <tr key='1'>\r\n                            <th><h1>logo</h1></th>\r\n                            <th><h1>name</h1></th>\r\n                            <th><h1>ticker</h1></th>\r\n                            <th><h1>employees</h1>\r\n                            </th>\r\n                            <th><h1>country</h1></th>\r\n                            <th><h1></h1></th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <CompanieList onRemoveCompanie={this.onRemoveCompanie} companies={companiesData} />\r\n                    </tbody>\r\n                </table>\r\n                </section>\r\n            </MainLayout>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {HomePage} from './pages/home-page.jsx'\r\n\r\n// Routes accesible from the main navigation (in AppHeader)\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        component: HomePage,\r\n        label: 'Home 🏠',\r\n    },\r\n   \r\n]\r\n\r\nexport default routes;","import React from 'react'\r\n\r\n// const { Switch, Route } = ReactRouterDOM\r\nimport { Switch, Route } from 'react-router'\r\nimport routes from './routes'\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\n\r\n\r\nexport class RootCmp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter basename='/'>\r\n\r\n                <div>\r\n                    <main>\r\n                        <Switch>\r\n                            {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport {RootCmp} from './root-cmp';\nimport './assets/styles/main.scss';\n\n\n\nReactDOM.render(\n<React.StrictMode>\n      <Router>\n        <RootCmp />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}